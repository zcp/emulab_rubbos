<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="iis.html">

  &project;
<copyright>
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
</copyright>
<properties>
<title>ISAPI redirector for Micrsoft IIS HowTo</title>
<author email="hgomez@apache.org">Henri Gomez</author>
<author email="shachor@il.ibm.com">Gal Shachor</author>
<author email="yoavs@apache.org">Yoav Shapira</author>
<date>$Date: 2018-03-01 14:27:09 +0000 (Thu, 01 Mar 2018) $</date>
</properties>
<body>
<section name="Introduction">
<p>
This document explains how to set up the ISAPI redirector for IIS to cooperate with Tomcat. 
</p>

<p>
Normally IIS can not execute Servlets and Java Server Pages (JSPs), 
configuring IIS to use the ISAPI redirector plugin will let IIS send servlet and 
JSP requests to Tomcat (and this way, serve them to clients).
</p>

<p>
It is recommended that you also read the
<a href="../common_howto/workers.html">Workers HowTo</a> document
to learn how to setup the working entities between your web server and Tomcat Engines.
For more detailed configuration information consult the Reference Guide for
<a href="../reference/workers.html">workers.properties</a>,
<a href="../reference/uriworkermap.html">uriworkermap</a>
and <a href="../reference/iis.html">IIS</a>.
</p>


<subsection name="Document Conventions and Assumptions">
<p>
${tomcat_home} is the root directory of tomcat. 
Your Tomcat installation should have the following subdirectories:

<ul>
<li>
${tomcat_home}\conf - Where you can place various configuration files
</li>
<li>
${tomcat_home}\webapps - Containing example applications
</li>
<li>
${tomcat_home}\bin - Where you place web server plugins
</li>
</ul>
</p>
<p>
In all the examples in this document ${tomcat_home} will be <b>c:\tomcat</b>.
A worker is defined to be a tomcat process that accepts work from the IIS server.
</p>
</subsection>


<subsection name="Supported Configuration">
<p>
The IIS to Tomcat redirector is supported for:
</p>
<ul>
<li>IIS running on Windows 7 or later</li>
<li>IIS running on Windows Server 2008 SP2 or later</li>
<li>Tomcat 7 or later</li>
</ul>
<p>
The redirector may work with IIS running on older versions of Windows but such
configurations are not supported.
</p>

<p>
The mod_jk module uses the AJP protocol to send requests to the Tomcat
containers. The AJP version used is <b>ajp13</b>. All current versions Tomcat
support the ajp13 protocol. Others servlet engines such as <b>Jetty</b> and
<b>JBoss</b> also support the ajp13 protocol.
</p>

</subsection>

<subsection name="How does it work ?">
<p>
<ol>
<li>
The ISAPI redirector is a Microsoft IIS plugin (filter + extension). IIS loads
the redirector plugin and calls its filter function for each in-coming request.
</li>
<li>
The filter then tests the request URL against a list of URI-paths held inside
uriworkermap.properties. If the current request matches one of the entries in
the list of URI-paths, the filter transfers the request to the extension.
</li>
<li>
The extension collects the request parameters and forwards them to the
appropriate worker using the defined protocol like <b>ajp13</b>.
</li>
<li>
The extension collects the response from the worker and returns it to the
browser.
</li>
</ol>
</p>
</subsection>

</section>

<section name="Installation">
<p>
Pre-built versions of the ISAPI redirector plugin, isapi_redirect.dll, for
32-bit and 64-bit environments are available from the
<a href="https://tomcat.apache.org/download-connectors.cgi">Apache Tomcat
Connectors Downloads</a> page.

You can also build a copy locally from the Tomcat Connectors source
distribution.

The ISAPI redirector requires three entities:

<ul>
<li>
<b>isapi_redirect.dll</b> - The ISAPI redirector for Microsoft IIS plugin,
either obtain a pre-built DLL or build it yourself (see the build section).
</li>
<li>
<b><a href="../reference/workers.html">workers.properties</a></b> - A file that
describes the host(s) and port(s) used by the workers (Tomcat processes). 
A sample workers.properties can be found under the conf directory.
</li>
<li>
<b><a href="../reference/uriworkermap.html">uriworkermap.properties</a></b> - A
file that maps URL-Path patterns to workers. 
A sample uriworkermap.properties can be found under the conf directory as well.
</li>
</ul>
</p>

<p>
The installation includes the following parts:

<ul>
<li>
Configuring the ISAPI redirector with a default /examples context and checking
that you can serve servlets with IIS.
</li>
<li>
Adding more contexts to the configuration.
</li>
</ul>
</p>

<subsection name="Configuring the ISAPI Redirector">

<p>These instructions have been written based on Windows Server 2012 R2 and
tested with all supported Windows operating systems up to Windows 10 / Windows
Server 2016.
</p>

<p>
These installation instructions have been tested with a default installation of
IIS plus ISAPI Extensions and Filters on a clean, fully patched OS installation
with Tomcat 9 installed in <b>C:\Program Files\Apache Software Foundation\Tomcat
9.0</b>. This is referred to as ${tomcat_home} for the remainder of this
document.
</p>

<ol>
<li>
Create a directory <b>${tomcat_home}\isapi</b>
</li>
<li>
Allow the IIS process to create the ISAPI redirector log file. Modify the path
as necessary if the log file is to be written to a different directory. Enter
the following at a command prompt:
<source>
>icacls "C:\Program Files\Apache Software Foundation\Tomcat 9.0\isapi" /grant "IIS APPPOOL\DefaultAppPool":(OI)(CI)M
</source>
On client operating systems with User Account Control (UAC) enabled, the command
prompt must be opened using <b>Run as administrator</b> for the above command to
complete successfully.
</li>
<li>
Download the appropriate (32-bit or 64-bit) isapi_redirect.dll for your
operating system and place it in <b>${tomcat_home}\isapi</b>
</li>
<li>
Create <b>${tomcat_home}\isapi\isapi_redirect.properties</b> file to configure the ISAPI
redirctor. Configuration can also be performed via registry settings - see
below. The contents of this file should be:
<source>
extension_uri=/jakarta/isapi_redirect.dll
log_file=C:\Program Files\Apache Software Foundation\Tomcat 9.0\isapi\isapi_redirect.log
log_level=info
worker_file=C:\Program Files\Apache Software Foundation\Tomcat 9.0\isapi\workers.properties
worker_mount_file=C:\Program Files\Apache Software Foundation\Tomcat 9.0\isapi\uriworkermap.properties
</source>
Be careful so that Windows does not add a <b>.txt</b> extension to the file.
</li>
<li>
Create <b>${tomcat_home}\isapi\workers.properties</b> file to configure the Tomcat
instances that requests will be passed to. For a single Tomcat instance on the
local machine the contents of this file should be:
<source>
worker.list=tomcat01
worker.tomcat01.type=ajp13
worker.tomcat01.host=localhost
worker.tomcat01.port=8009
</source> 
</li>
<li>
Create <b>${tomcat_home}\isapi\uriworkermap.properties</b> file to configure which
requests will be passed to Tomcat. To expose the examples web application the
contents of this file should be:
<source>
/examples/*=tomcat01
</source> 
</li>
<li>
Using the IIS management console, add a new virtual directory to your IIS web
site. In a clean install, this will be the <b>Default Web Site</b>. The name of
the virtual directory must be <b>jakarta</b>.  Its physical path should be the
directory where you placed <b>isapi_redirect.dll</b>.
</li>
<li>
Select the newly created virtual directory in the management console and then
double-click <b>Handler Mappings</b>. Select the (currently disabled)
<b>ISAPI-dll</b> entry and then click <b>Edit Feature Permissions</b> in the
action pane. In the dialog box that opens, select <b>Execute</b> so all three
permissions are selected. Click <b>OK</b> and <b>ISAPI-dll</b> should now be in
the enabled state.
</li>
<li>
Again using the IIS management console, add the ISAPI redirector as a filter to
your web site. Select your web site and then double-click <b>ISAPI Filters</b>.
From the action pane, click <b>Add...</b>. For the filter name use <b>tomcat</b>
and the executable should be the full path to <b>isapi_redirect.dll</b>. Once
configured, click <b>OK</b>.
</li>
<li>
Still using the IIS management console, configure the ISAPI redirector as
allowed. Select your server (not the web site) and then double-click on <b>ISAPI
and CGI Restrictions</b>. From the action pane, click <b>Add...</b>. Select the
isapi_redirect.dll, add a descripion (e.g. tomcat) and select the <b>Allow
extension path to execute</b> and then click <b>OK</b>.
</li>
<li>
Restart IIS (stop + start the IIS service).
</li>
</ol>

<p>
That's all, you should now start Tomcat and ask IIS to serve you the /examples
context. Try <a href="http://localhost/examples/">http://localhost/examples/</a>
for example and execute some of the Servlet or JSP examples.
</p>
<p>
If this does not work successfully, refer to the Troubleshooting section below for help on correcting the problem.
</p>
</subsection>

<subsection name="IIS logging">

<p>
If the IIS access logs show entries such as <b>/jakarta/isapi_redirect.dll</b>
rather than <b>/examples/servlets</b> then this can be corrected via the IIS
management console. Select your server (not the web site) and then double-click
on <b>Modules</b>. In the <b>Actions</b> pane, click
<b>View Ordered List...</b>, select the <b>IsapiFilterModule</b> and move it up
until it is above the <b>HttpLoggingModule</b>.
</p>

</subsection>

<subsection name="Registry configuration">

<p>
As an alternative to using the <b>isapi_redirector.properties</b> file, the
ISAPI redirector may be configured via the registry. To do this, follow these
steps:
</p>
<ol>
<li>
In the registry, create a new registry key named
<b>"HKEY_LOCAL_MACHINE\SOFTWARE\Apache Software Foundation\Jakarta Isapi Redirector\1.0"</b>
</li>
<li>
Add a string value with the name <b>extension_uri</b> and a value of <b>/jakarta/isapi_redirect.dll</b>
</li>
<li>
Add a string value with the name <b>log_file</b> and a value pointing to where you want your 
log file to be (for example <b>c:\tomcat\logs\isapi.log</b>).
</li>
<li>
Add a string value with the name <b>log_level</b> and a value for your log level 
(can be debug, info, error or emerg).
</li>
<li>
Add a string value with the name <b>worker_file</b> and a value which is the full path 
to your workers.properties file (for example <b>c:\tomcat\conf\workers.properties</b>)
</li>
<li>
Add a string value with the name <b>worker_mount_file</b> and a value which is the full path 
to your uriworkermap.properties file (for example <b>c:\tomcat\conf\uriworkermap.properties</b>)
</li>
</ol>

</subsection>

<subsection name="64 Bit notes">
<p>
In a 64 Bit environment the used IIS Application Pool should have "Enable 32-bit
Applications" set to "False". To check this, select <b>Application Pools</b> in
the IIS management console, then right-click on the pool you are using and
select <b>Set Application Pool Defaults...</b>. <b>Enable 32-Bit
Applications</b> may be found in the <b>General</b> section. If this is not
configured correctly, the redirector will not be called and IIS will return an
HTTP code 404.
</p>
<p>
You must use the 64-bit version of the ISAPI redirector on 64-bit operating
systems. If you attempt to use the 32bit version, you will get an HTTP code 500
for every request because the library is not loadable into a 64-bit IIS.
</p>
</subsection>

<subsection name="Adding additional Contexts">
<p>
The examples context is useful for verifying your installation, 
but you will also need to add your own contexts. Adding a new context requires two operations:
</p>
<p>
<ol>
<li>
Adding the context to Tomcat (I am not going to talk about this).
</li>
<li>
Adding the context to the ISAPI redirector.
</li>
</ol>
</p>
<p>
Adding a context to the ISAPI redirector is simple, all you need to do is to edit 
your uriworkermap.properties and to add a line that looks like:
</p>

<source>
  /context/*=worker_name
</source>

<p>
Workers and their name are defined in workers.properties, by default workers.properties comes 
with a single pre-configured worker named <b>"defworker"</b> so you can use it. 
As an example, if you want to add a context named "shop", the line that you should add to 
uriworkermap.properties will be:
</p>

<source>
  /shop/*=defworker
</source>

After saving uriworkermap.properties restart IIS and it will serve the new context.
<p>
The above should be all you need for IIS to pass through to Tomcat any request for any URI which corresponds
to a Tomcat context (webapp).
</p>
</subsection>

<subsection name="Advanced Context Configuration">
<p>
If your webiste is very busy (more than 100 requests/second, or more than 100 simultaneous client connections),
it might sometimes be desirable to have IIS serve static content (html, gif, jpeg etc.) directly, 
even if these files are part of a context served by Tomcat.  Allowing IIS to serve such files directly may
 avoid the small overhead consisting of passing the request to Tomcat via the redirector, and may free up
 Tomcat somewhat, by using it only to process requests that only Tomcat can handle (e.g. requests to JSP pages and java servlets).
</p>
<p>
For example, consider the html and gif files in the examples context: you could serve these files directly
with IIS; there is no need to serve them from the Tomcat process.
</p>
<warn>However, you should be very careful when you implement the following configuration style, because by doing so you are
in fact providing a "back-door" to IIS, and allowing it to serve files out of a Tomcat context without Tomcat's knowledge,
thus bypassing any security
restrictions which Tomcat itself and the Tomcat context (webapp) may place on those files.</warn>
<p>
Making IIS serve static files that are part of the Tomcat contexts requires the following:
<ol>
<li>
Configuring IIS to know about the Tomcat contexts
</li>
<li>
Configuring the redirector to leave the static files for IIS
</li>
</ol>
</p>

<p>
Adding a Tomcat context to IIS requires the addition of a new IIS virtual directory that covers the Tomcat context. 
For example adding a /example IIS virtual directory that covers the c:\tomcat\webapps\examples directory.
</p>

<p>
Configuring the redirector is somewhat harder, you will need to specify the exact 
URL-Path pattern(s) which you want Tomcat to handle (usually only JSP files and servlets). 
This requires a change to the uriworkermap.properties: 

<source>
  For the examples context it requires to replace the following line
  /examples/*=defworker
  with the following two lines
  /examples/*.jsp=defworker
  /examples/servlet/*=defworker
</source>
</p>

<p>
As you can see the second configuration is more explicit, it actually instruct the redirector 
to redirect only requests to resources under /examples/servlet/ and resources under /examples/ 
whose name ends with .jsp. 
</p>

<p>
You can even be more explicit and provide lines such as:

<source>
  /example/servlets/chat=defworker
</source>
</p>

<p>
that instructs the redirector to redirect all requests whose URL-path matches the leading string "/example/servlets/chat" 
to the worker named defworker.
</p>

</subsection>

<subsection name="Protecting the content of your Tomcat contexts">
<p>Once again, be aware that by allowing IIS to access the content of your Tomcat context directly, you are
potentially bypassing Tomcat's protection of that content.  You should thus make sure to protect this content
at the IIS level if needed, by using the corresponding IIS management console functions. 
</p>
<p>
In particular, each servlet application (context) has a special directory named WEB-INF, 
which contains sensitive configuration data and Java classes, and which should always be kept hidden from web users. 
Using the IIS management console it is possible to protect the WEB-INF directory from user access, but considering that
this is a general requirement, and considering that it is easy to forget to implement this protection
at the IIS level, the ISAPI redirector plugin does it automatically for you, and it will reject any request
which contains WEB-INF in its URL path. It will also reject any request which contains META-INF in its URL path.
</p>
</subsection>

<subsection name="Advanced Worker Configuration">
<p>
Sometimes you may want to serve different contexts with different Tomcat processes 
(for example to spread the load among different machines). 
To achieve such a goal you will need to define several workers and assign each context to its own worker.
</p>
<p>
Defining additional workers is done in the workers.properties file. This file includes two types of entries:
</p>

<p>
<source>
  # An entry that lists all the workers defined
  worker.list=worker1, worker2
  # Entries that define the host and port associated with each of these workers
  worker.worker1.host=localhost
  worker.worker1.port=8009
  worker.worker1.type=ajp13
  worker.worker2.host=otherhost
  worker.worker2.port=8009
  worker.worker2.type=ajp13
</source>
</p>

<p>
The above example defined two workers, now we can use these workers to serve two different contexts 
each with its own worker: 
<source>
  example uriworkermap.properties fragment
  /examples/*=worker1
  /webpages/*=worker2
</source>
</p>

<p>
As you can see the <b>examples</b> context is served by <b>worker1</b> while the 
<b>webpages</b> context is served by <b>worker2</b>.
</p>

<p>
More information on using and configuring workers in the <a href="../common_howto/workers.html">Workers HowTo</a>
and in the <a href="../reference/workers.html">worker.properties configuration reference</a>.
</p>

</subsection>

</section>

<section name="Building the ISAPI redirector">
<p>
The redirector was developed using Microsoft Visual C++, so having Visual Studio installed
is a prerequisite if you want to perform your own build.</p>
<p>
You can build the source using the IDE GUI, or using a pure
commandline build based on nmake. The IDE build currently only
supports building 32 Bit binaries. The  nmake builds are available
for 32 Bit, 64 Bit and Itanium binaries.
</p>
<p>
The common steps for all build procedures are:
<ul>
<li>
Set up your build environment for 32 Bits or 64 Bits.
The IDE build only supports 32 Bits.
</li>
<li>
Download the sources as a zip file and unpack it.
</li>
<li>
Change directory to the ISAPI redirector source directory.
</li>
</ul>
<screen>
<note>Set up 32 or 64 Bit build environment</note>
<typedos>setenv /Release /X86</typedos>
<note>or (not available for IDE build)</note>
<typedos>setenv /Release /X64</typedos>
<note>Download tomcat-connectors-xxx-src.zip from</note>
<note>https://tomcat.apache.org/download-connectors.cgi</note>
<note>and unpack it</note>
<typedos>unzip tomcat-connectors-xxx-src.zip</typedos>
<note>Change directory to the ISAPI redirector source directory</note>
<typedos>cd tomcat-connectors-xxx-src\native\iis</typedos>
</screen>
</p>
<p>
The steps for an IDE build are then:
<ul>
<li>
Start Visual Studio using "start isapi.dsw"
</li>
<li>
During IDE startup choose "Yes" in all conversion popups.
</li>
<li>
Next choose "Debug" or "Release" in the Configuration dropdown.
</li>
<li>
Finally choose "Build Solution" in the "Build" menu.
</li>
</ul>
The resulting file isapi_redirect.dll (and the debug symbol file
isapi_redirect.pdb) is located in the "Debug" resp. "Release" sub
directory depending on the build Configuration chosen. As an
intermediate step the build first creates a static PCRE library
named pcre.lib in the sub directory "pcre/LibD" resp. "pcre/LibR".
</p>
<p>
Alternatively the steps for an nmake commandline build are:
<ul>
<li>
Issue "nmake -f Makefile.x86" for a 32 Bit build, or
</li>
<li>
Issue "nmake -f Makefile.amd64" for a 64 Bit build
</li>
</ul>
The resulting file isapi_redirect.dll (and the debug symbol file
isapi_redirect.pdb) is located in the "Release_x86" or "Release_amd64"
sub directory. As an intermediate step the build first creates a static
PCRE library named pcre.lib in the sub directory "pcre/Release_x86" or
"pcre/Release_amd64".
</p>
</section>

<section name="Troubleshooting">
<p>
It is easy to have the ISAPI redirector not work the first time you try to install it.
</p>
<p>
If this happens to you, here are some steps to follow to try to correct the problem.
</p>
<p>
These steps aren't guaranteed to cover all possible problems, 
but they should help find the typical mistakes.
</p>
<p>
If you make any corrections during these steps, restart the IIS service as described above in the last step 
of the installation, then retry the step.
</p>

<p>To enable error tracking, make sure web site activity is being logged. 
For PWS 4.0 make sure "Save Web Site Activity Log" is checked in the Advanced Options of the Personal Web Manager.
</p>
   
<p>
Note: These steps assume your <b>worker_mount_file</b> setting points to an unmodified copy of the 
<b>uriworkermap.properties</b> file.<br/>
Results may be misleading if <b>worker_mount_file</b> points to a modified <b>uriworkermap.properties</b>
or the <b>uriworkermap.properties-auto</b> file.<br/>
It is also assumed that the <b>"/examples" context</b> works correctly if you access Tomcat directly.
</p>

<subsection name="Win98">
<p>
Start the IIS service and Tomcat.
</p>
<p>
Check for the presence of the ISAPI redirector log file you specified in the log_file setting. 
If not found, verify the following:
</p>
<ul>
<li>
Check the "Filter DLLs" setting in the "HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W3SVC\Parameters" 
key and make sure the path is correct.
</li>
<li>
Check the spelling of the "HKEY_LOCAL_MACHINE\SOFTWARE\Apache Software Foundation\Jakarta Isapi Redirector\1.0" key. 
Case isn't important, but an incorrect letter will prevent the isapi_redirect.dll from finding its registry settings.
</li>
<li>
Check the log_file setting for typos, name and data. Also insure the directory in which the log file will appear already exists.
</li>
If the above are set correctly, the ISAPI redirector should be able to create the log file.
</ul>
<p>
Invoke the URL <a href="http://localhost/examples/">http://localhost/examples/</a>
in your browser. 
Case is important in Tomcat. The characters following "localhost" in the URL must be lower case. 
If the page fails to appear, stop the IIS service (required to view the IIS log file). 
Then examine the last line in the IIS log file in found in SYSTEM/LogFiles/W3SVC1:
</p>
<p>
If the last line contains: 
</p>
<source>
  GET "/examples/ HTTP/1.1" 404
</source>
<p> 
then the ISAPI redirector is not recognising that it should be handling requests for the "/examples" context. 
Check the following:
</p>
<ul>
<li>
Check the extension_uri name for typos.
</li>
<li>
Check the worker_file setting for typos, name and data.
</li>
<li>
Check the worker_mount_file setting typos, name and data.
</li>
If these are set correctly, the ISAPI redirector should recognise that it should handle requests for the "/examples" context.
</ul>

<p>If the last line contains something like:
</p>

<source>
  GET "/jakarta/isapi_redirect.dll HTTP1.1"
</source>

<p>
then the ISAPI redirector is recognising that it should handle the request, 
but is not successful at getting Tomcat to service the request.
</p>

<p>
You should check the HTTP error code following GET "/...":
</p>

<source>
  Error 404
  GET "/..." 404
</source>

<ul>
<li>
Make sure you entered the URL correctly.
</li>
<li>
Make sure the virtual directory created was called "jakarta". 
It should display in Personal Web Manager as "/jakarta" (without the quotes).
</li>
<li>
Make sure the extension_uri data begins with "/jakarta/" (without the quotes).
</li>
</ul>

<source>
  Error 500
  GET "/..." 500
</source>

<ul>
<li>
Make sure that "isapi_redirect.dll" follows "/jakarta/" in the extension_uri setting.
</li>
<li>
Check the workers.properties file and make sure the port setting for worker.ajp13.port is the same as the port specified in the server.xml for the "AJP" connector.
</li>
</ul>

<source>
  Error 200 or 403
  GET "/..." 200
  GET "/..." 403
</source>

<ul>
<li>
Make sure you have checked Execute Access 
for the jakarta virtual directory in the Advanced Options of the Personal Web Manager.
</li>
</ul>

<p>
If the above settings are correct, the index.html page should appear in your browser. 
You should also be able to click the links to execute some Servlet or JSP examples.
</p>

</subsection>

<subsection name="WinNT/Win2K/WinXP">
<p>
Start the World Wide Web Publishing Service and Tomcat.
</p>
<p>
Check for the presence of the ISAPI redirector log file you specified in the log_file setting. 
If not found, check the following:
</p>
<ul>
<li>
Check the "executable" you set for the filter in the IIS Management Console and make sure the path is correct.
</li>
<li>Check the spelling of the "HKEY_LOCAL_MACHINE\SOFTWARE\Apache Software Foundation\Jakarta Isapi Redirector\1.0" key.
Case isn't important, but an incorrect letter will prevent the isapi_redirect.dll from finding its registry settings.
</li>
<li>
Check the log_file setting for typos, name and data. Also insure the directory in which the log file will appear already exists.
</li>
If the above are set correctly, the ISAPI redirector should be able to create the log file.
</ul>

<p>
Check the tomcat filter you added and make sure its status shows a green upward-pointing arrow. 
If not, check the following:
</p>
<ul>
<li>
Check the worker_file setting for typos, name and data.
</li>
<li>
Check the worker_mount_file setting typos, name and data.
</li>
If the above are set correctly, the green upward-pointing arrow should appear, even if the other settings are wrong.
</ul>

<p>
Invoke the URL <a href="http://localhost/examples/">http://localhost/examples/</a> 
in your browser. Case is important in Tomcat. The characters following "localhost" in the URL must be lower case. 
If the page fails to appear, examine the last line in the IIS server log file in found in SYSTEM32/LogFiles/W3SVC1.
</p>

<p>
The last line should contain something like: GET "/jakarta/isapi_redirect.dll HTTP1.1", 
which indicates the ISAPI redirector is recognising that it should handle the request.
</p>

<p>
You should check the HTTP error code following GET "/...":
</p>

<source>
  Error 404
  GET "/..." 404
</source>

<ul>
<li>
Make sure you entered the URL correctly.
</li>
</ul>

<source>
  Error 500
  GET "/..." 500
</source>

<ul>
<li>
Make sure the virtual directory created was called "jakarta".
</li>
<li>
Make sure that the extension_uri setting is correct.
</li>
<li>
Check the workers.properties file and make sure the port setting for worker.ajp13.port is the same as the port specified in the server.xml for the "AJP" connector.
</li>
</ul>

<source>
  Error 200 or 403
  GET "/..." 200
  GET "/..." 403
</source>

<ul>
<li>
Make sure you have checked Execute Access for the jakarta virtual directory in the 
Advanced Options of the Personal Web Manager.
</li>
</ul>

<p>
If the above settings are correct, the index.html page should appear in your browser. 
You should also be able to click the links to execute some Servlet or JSP examples.
</p>
</subsection>


</section>
</body>
</document>
